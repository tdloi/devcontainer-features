name: Update README with Features

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'src/*/devcontainer-feature.json'
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday at midnight

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update README with features
        id: update-readme
        run: |
          # Generate feature list from all subdirectories in src
          FEATURE_LIST=""

          # Loop through each directory in src
          for feature_dir in src/*/; do
            # Remove trailing slash and get the base name
            feature_name=$(basename "$feature_dir")

            # Path to the feature's JSON file
            json_file="${feature_dir}devcontainer-feature.json"

            if [ -f "$json_file" ]; then
              # Extract the description from the JSON file
              description=$(jq -r '.description' "$json_file")

              # Add to the feature list with the format: - [feature](./src/feature): description
              FEATURE_LIST="${FEATURE_LIST}- [${feature_name}](./src/${feature_name}/): ${description}\n"
            fi
          done

          # Read the current README.md
          readme_content=$(cat README.md)

          # Find the line with "This repository contains a _collection_ of Features"
          intro_line="This repository contains a _collection_ of Features. Each sub-section below demonstrates the usage of a specific Feature."

          # Create the new README content
          if [[ "$readme_content" == *"$intro_line"* ]]; then
            # Split the content at the intro line
            header_part=$(echo "$readme_content" | sed -n "1,/$intro_line/p")

            # Create the new README content with the updated feature list
            new_content="${header_part}${FEATURE_LIST}"

            # Update README.md
            echo -e "$new_content" > README.md

            # Check if there were changes
            if git diff --quiet README.md; then
              echo "No changes to README.md"
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "Updated README.md with feature list"
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "Could not find the introduction line in README.md"
            exit 1
          fi

      - name: Commit and push changes
        if: steps.update-readme.outputs.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email github-actions[bot]@users.noreply.github.com
          git config --global user.name github-actions[bot]
          git config pull.rebase false

          branch=automated-readme-update-$GITHUB_RUN_ID
          git checkout -b $branch

          message='Automated README update'
          git add README.md
          git commit -m "Automated README update [skip ci]"

          git push origin $branch
          gh pr create --title "$message" --body "$message"
